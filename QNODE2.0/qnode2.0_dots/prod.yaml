version: '3.9'

services:
  qnode20_app:
    image: smartquail/qnode20_app:latest
    environment:
      - PORT=9000
    env_file:
      - .env_prod 
    depends_on:
      - smartquaildb
    expose:
    - 9000
    ports:
      - "9000:9000"
    volumes:
      - static-data-qnode20:/qnode2.0_app/qnode20_app/staticfiles
      - static-data-qnode20:/qnode2.0_app/qnode20_app/media
   # command: sh -c "chmod +x /scripts/migrations.sh && sh /scripts/migrations.sh && sh /scripts/run.sh"

  smartquaildb:
    image: postgres:13-alpine
    restart: always
    command: -p 5432
    env_file:
      - .env_prod 
    ports:
      - "5432:5432"
    expose:
     - 5432
    volumes:
      - smartquaildb_data:/var/lib/postgresql/data/
      

  qnode20_proxy:
    image: smartquail/qnode20_nginx:prod
    restart: always
    env_file:
      - .env_prod 
    ports:
    - "80:80"
    - "443:443"
    depends_on:
    - qnode20_app
    volumes: 
    - nginx_conf:/etc/nginx/sites
    - nginx_ssl:/etc/nginx/ssl
    - letsencrypt_certs:/etc/letsencrypt
    - certbot_acme_challenge:/var/www/certbot
    - static-data-qnode11:/qnode1.1_app/qnode11_app/staticfiles
    - static-data-qnode11:/qnode1.1_app/qnode11_app/media

  certbot:
    image: smartquail/qnode20_certbot:0.1
    env_file:
      - .env_prod 
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_acme_challenge:/var/www/certbot
    depends_on:
      - qnode0_proxy

  cron:
    image: smartquail/qnode20_cron:0.1
    environment:
      COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workdir:ro
    depends_on:
      - qnode11_proxy
      - certbot
   

  redis:
    image: redis:3.0
    restart: always
    expose:
      - 6379
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    entrypoint: redis-server --appendonly yes --port 6379


  rabbitmq:
    image: rabbitmq:3-management-alpine
    command: rabbitmq-server
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
    - rabbitmq-data:/var/lib/rabbitmq
    - rabbitmq-data:/var/log/rabbitmq
    expose:
      - 5672
      - 15672
    networks:
        - lansmartquail

  worker:
    image: smartquail/qnode20_app:latest
    command: ['celery','-A', 'qnode20_app','worker', '-l', 'info']
    restart: always
    environment:
      - PORT=9000
    ports:
      - "9000:9000"
    env_file:
      - .env_prod
    volumes:
      - static-data-qnode20:/qnode20_app/
    depends_on:
      - redis
      - rabbitmq
    networks:
        - lansmartquail
  
volumes:
  smartquaildb_data:
  redis_data:
  static-data-qnode20:
  nginx_conf:
  nginx_ssl:
  certbot_acme_challenge:
  letsencrypt_certs:
  